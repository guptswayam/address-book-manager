{"version":3,"sources":["containers/AddresBook/EditContact.module.css","components/Contact/Contact.module.css","components/Header/Header.js","containers/Layout/Layout.js","store/actions/actionTypes.js","components/Alert/Alert.js","containers/Auth/Login.js","containers/Homepage/Homepage.js","containers/Auth/Signup.js","components/Contact/Contact.js","components/Loader/Loader.js","containers/AddresBook/Contacts.js","store/actions/auth.js","containers/AddresBook/EditContact.js","containers/AddresBook/AddContact.js","App.js","store/reducers/auth.js","index.js"],"names":["module","exports","Header","props","className","to","user","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Fragment","style","background","border","padding","marginTop","color","onClick","logoutHandler","Layout","a","fetch","res","json","status","window","location","assign","this","children","Component","LOGIN_SUCCESS","LOGIN_FAILED","AUTH_START","Alert","display","position","top","left","transform","zIndex","value","Login","state","formData","email","password","showAlert","alertType","alertMsg","inputChangeHandler","key","event","setState","target","loginHandler","preventDefault","buttonRef","current","textContent","disabled","method","headers","body","JSON","stringify","resData","setTimeout","history","push","loginSuccessful","data","console","log","message","createRef","alert","maxWidth","margin","onSubmit","required","placeholder","onChange","bind","ref","connect","dispatch","actionTypes","Homepage","textAlign","Signup","name","Contact","classes","my_address","fontWeight","number","address_buttons","editButtonHandler","marginLeft","deleteButtonHandler","Loader","Spinner","animation","role","size","Contacts","contacts","loading","filteredContacts","index","findIndex","el","_id","splice","searchBynameHandler","e","filter","toLowerCase","indexOf","content","length","map","loginFailed","EditContact","invalidId","editContactHandler","match","params","editDOM","minLength","maxLength","AddContact","addContactHandler","App","appLoading","checkUserSession","routes","path","component","exact","from","authReducer","error","initialState","reducer","action","composeEnhancers","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.652b67b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"address_buttons\":\"EditContact_address_buttons__1S3JX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"my_address\":\"Contact_my_address__2IpTr\",\"address_buttons\":\"Contact_address_buttons__1BMpW\"};","import React from \"react\"\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\nconst Header = (props)=>{\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\" >\r\n            <NavLink className=\"navbar-brand\" to={props.user?\"/contacts\": \"/\"}>Address-Book</NavLink>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <span className=\"mr-auto\"></span>\r\n                <ul className=\"navbar-nav mr-right\">\r\n                    {props.user ? \r\n                        (\r\n                            <React.Fragment>\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink className=\"nav-link\" to=\"/add-contact\">Add Contact</NavLink>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <button style={{background: \"none\", border: \"none\", padding: \"0px\", marginTop: \"7px\",color:\"lightgray\"}} onClick={props.logoutHandler}>Logout</button>\r\n                                </li>\r\n                            </React.Fragment>\r\n                        ):\r\n                        (\r\n                        <React.Fragment>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link\" to=\"/signup\">Sign up</NavLink>\r\n                            </li>\r\n                        </React.Fragment>\r\n                    )\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport Header from \"../../components/Header/Header\";\r\n\r\nclass Layout extends Component{\r\n\r\n    logoutHandler =async ()=>{\r\n        const res = await fetch(\"/api/v1/users/logout\");\r\n        const resData = await res.json();\r\n        if(resData.status === \"success\")\r\n            window.location.assign(\"/\");\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <Header user={this.props.user} logoutHandler={this.logoutHandler}/>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILED = \"LOGIN_FAILED\";\r\nexport const AUTH_START = \"AUTH_START\";","import React from \"react\";\r\n\r\nconst Alert = props=>{\r\n    return (\r\n        <p className={`alert alert-${props.type}`} style={{display: \"inline\", position: \"fixed\", top: \"100px\", left: \"50%\", transform: \"translateX(-50%)\", zIndex: 500}}>{props.value}</p>\r\n    )\r\n}\r\n\r\nexport default Alert;","import React, { Component, createRef } from \"react\";\r\nimport * as actionTypes from \"./../../store/actions/actionTypes\";\r\nimport {connect} from \"react-redux\"\r\nimport Alert from \"../../components/Alert/Alert\";\r\nclass Login extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.buttonRef = createRef();\r\n    }\r\n\r\n    state = {\r\n        formData: {\r\n            email: \"\",\r\n            password: \"\"\r\n        },\r\n        showAlert: false,\r\n        alertType: \"success\",\r\n        alertMsg: \"\"\r\n    }\r\n\r\n    inputChangeHandler= (key,event)=>{\r\n        this.setState({\r\n            formData: {\r\n                ...this.state.formData,\r\n                [key]: event.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    loginHandler= async (event)=>{\r\n        event.preventDefault();\r\n        try {\r\n            this.buttonRef.current.textContent = \"Logging in...\";\r\n            this.buttonRef.current.disabled=true;\r\n            const res = await fetch(\"/api/v1/users/login\", {\r\n                method: \"POST\",\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n                body: JSON.stringify(this.state.formData)\r\n            });\r\n            const resData = await res.json();\r\n            if(resData.status === \"success\"){\r\n                this.buttonRef.current.textContent = \"Login\";\r\n                this.buttonRef.current.disabled=false;\r\n                 this.setState({\r\n                    alertType: \"success\",\r\n                    showAlert: true,\r\n                    alertMsg: \"Login Successful\"\r\n                })\r\n                setTimeout(()=>{\r\n                    this.setState({\r\n                        showAlert: false\r\n                    })\r\n                    this.props.history.push(\"/contacts\");\r\n                    this.props.loginSuccessful(resData.data);\r\n                },3000)\r\n            }\r\n            else{\r\n                console.log(resData.message);\r\n                this.buttonRef.current.textContent = \"Login\";\r\n                this.buttonRef.current.disabled=false;\r\n                this.setState({\r\n                    alertType: \"danger\",\r\n                    showAlert: true,\r\n                    alertMsg: resData.message\r\n                })\r\n                setTimeout(()=>{\r\n                    this.setState({\r\n                        showAlert: false\r\n                    })\r\n                },3000)\r\n            }\r\n            \r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.buttonRef.current.textContent = \"Login\";\r\n            this.buttonRef.current.disabled=false;\r\n            this.setState({\r\n                alertType: \"danger\",\r\n                showAlert: true,\r\n                alertMsg: \"something went wrong\"\r\n            })\r\n            setTimeout(()=>{\r\n                this.setState({\r\n                    showAlert: false\r\n                })\r\n            },3000)\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        let alert = null;\r\n        if(this.state.showAlert){\r\n            alert = <Alert type={this.state.alertType} value={this.state.alertMsg} />\r\n        }\r\n        return (\r\n            <form className=\"form-group\" style={{maxWidth: \"600px\", margin: \"auto\"}} onSubmit={this.loginHandler}>\r\n                {alert}\r\n                <label>Email</label>\r\n                <input type=\"email\" required placeholder=\"email\" className=\"form-control\" value={this.state.formData.email} onChange={this.inputChangeHandler.bind(this, \"email\")}/>\r\n                <label>Password</label>\r\n                <input type=\"password\" required placeholder=\"password\" className=\"form-control\" value={this.state.formData.password} onChange={this.inputChangeHandler.bind(this, \"password\")}/>\r\n                <br></br>\r\n                <button className=\"btn btn-primary\" type=\"submit\" ref={this.buttonRef}>Login</button>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch=>{\r\n    return {\r\n        loginSuccessful: (user)=>dispatch({type: actionTypes.LOGIN_SUCCESS, user: user}) \r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Login);","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Homepage extends Component{\r\n    render(){\r\n        return (\r\n            <div style={{textAlign: \"center\"}}>\r\n                <br/>\r\n                <h2>To Create Your Address Book, Please signup...</h2>\r\n                <NavLink to=\"/signup\" className=\"btn btn-primary\">SIGNUP</NavLink>\r\n                <br/><br/>\r\n                <h2>To Check/Edit Your Address Book, Please login...</h2>\r\n                <NavLink to=\"/login\" className=\"btn btn-success\">LOGIN</NavLink>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Homepage;","import React, { Component, createRef } from \"react\";\r\nimport Alert from \"../../components/Alert/Alert\";\r\nclass Signup extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.buttonRef = createRef();\r\n    }\r\n\r\n    state = {\r\n        formData: {\r\n            email: \"\",\r\n            password: \"\",\r\n            name: \"\"\r\n        },\r\n        showAlert: false,\r\n        alertType: \"success\",\r\n        alertMsg: \"\"\r\n    }\r\n\r\n    inputChangeHandler= (key,event)=>{\r\n        this.setState({\r\n            formData: {\r\n                ...this.state.formData,\r\n                [key]: event.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    loginHandler= async (event)=>{\r\n        event.preventDefault();\r\n        try {\r\n            this.buttonRef.current.textContent = \"Signing up...\";\r\n            this.buttonRef.current.disabled=true;\r\n            const res = await fetch(\"/api/v1/users/signup\", {\r\n                method: \"POST\",\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n                body: JSON.stringify(this.state.formData)\r\n            });\r\n            const resData = await res.json();\r\n            if(resData.status === \"success\"){\r\n                this.buttonRef.current.textContent = \"Signup\";\r\n                this.buttonRef.current.disabled=false;\r\n                 this.setState({\r\n                    alertType: \"success\",\r\n                    showAlert: true,\r\n                    alertMsg: \"Signup Successful...\"\r\n                })\r\n                setTimeout(()=>{\r\n                    this.setState({\r\n                        showAlert: false\r\n                    })\r\n                    this.props.history.push(\"/login\");\r\n                },3000)\r\n            }\r\n            else{\r\n                console.log(resData.message);\r\n                this.buttonRef.current.textContent = \"Signup\";\r\n                this.buttonRef.current.disabled=false;\r\n                this.setState({\r\n                    alertType: \"danger\",\r\n                    showAlert: true,\r\n                    alertMsg: resData.message\r\n                })\r\n                setTimeout(()=>{\r\n                    this.setState({\r\n                        showAlert: false\r\n                    })\r\n                },3000)\r\n            }\r\n            \r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.buttonRef.current.textContent = \"Signup\";\r\n            this.buttonRef.current.disabled=false;\r\n            this.setState({\r\n                alertType: \"danger\",\r\n                showAlert: true,\r\n                alertMsg: \"something went wrong\"\r\n            })\r\n            setTimeout(()=>{\r\n                this.setState({\r\n                    showAlert: false\r\n                })\r\n            },3000)\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        let alert = null;\r\n        if(this.state.showAlert){\r\n            alert = <Alert type={this.state.alertType} value={this.state.alertMsg} />\r\n        }\r\n        return (\r\n            <form className=\"form-group\" style={{maxWidth: \"600px\", margin: \"auto\"}} onSubmit={this.loginHandler}>\r\n                {alert}\r\n                <label>Name</label>\r\n                <input type=\"text\" required placeholder=\"Name\" className=\"form-control\" value={this.state.formData.name} onChange={this.inputChangeHandler.bind(this, \"name\")}/>\r\n                <label>Email</label>\r\n                <input type=\"email\" required placeholder=\"Email\" className=\"form-control\" value={this.state.formData.email} onChange={this.inputChangeHandler.bind(this, \"email\")}/>\r\n                <label>Password</label>\r\n                <input type=\"password\" required placeholder=\"Password\" className=\"form-control\" value={this.state.formData.password} onChange={this.inputChangeHandler.bind(this, \"password\")}/>\r\n                <br></br>\r\n                <button className=\"btn btn-primary\" type=\"submit\" ref={this.buttonRef}>Signup</button>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup;","import React from \"react\";\r\nimport classes from \"./Contact.module.css\"\r\n\r\nconst Contact = props=>{\r\n    return (\r\n        <div style={{padding: \"20px\", border: \"2px solid black\", margin: \"30px auto\"}}>\r\n            <div className={classes.my_address}>\r\n                <p><span style={{fontWeight: \"bold\"}}>Name: </span>{props.name}</p>\r\n                <p><span style={{fontWeight: \"bold\"}}>Number: </span>{props.number}</p>\r\n            </div>\r\n            <div className={classes.address_buttons}>\r\n                <span></span>\r\n                <div>\r\n                    <button className=\"btn btn-warning\" onClick={props.editButtonHandler.bind(null,props.id)}>Edit</button>\r\n                    <button className=\"btn btn-danger\" style={{marginLeft: \"15px\"}} onClick={props.deleteButtonHandler.bind(null, props.id)}>Delete</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n)\r\n}\r\n\r\nexport default Contact;","import React from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\"\r\nconst Loader = props=>{\r\n    return (\r\n        <div style={{textAlign: \"center\"}}>\r\n            <Spinner animation=\"border\" role=\"status\" size=\"lg\" style={{marginTop: \"30px\"}}>\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import React, { Component } from \"react\";\r\nimport Alert from \"../../components/Alert/Alert\";\r\nimport Contact from \"../../components/Contact/Contact\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\n\r\nclass Contacts extends Component{\r\n\r\n    state = {\r\n        contacts: [],\r\n        showAlert: false,\r\n        alertType: \"success\",\r\n        alertMsg: \"\",\r\n        loading: true,\r\n        filteredContacts: []\r\n    }\r\n\r\n    async componentDidMount(){\r\n        try {\r\n            // if(!this.state.contacts){\r\n                const res = await fetch(\"/api/v1/users/get_my_contacts\");\r\n                const resData = await res.json();\r\n                if(resData.status===\"success\")\r\n                    this.setState({\r\n                        contacts: resData.data,\r\n                        loading: false,\r\n                        filteredContacts: resData.data\r\n                    })\r\n                else\r\n                    this.setState({\r\n                        loading: false\r\n                    })\r\n            // }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteButtonHandler = async (id)=>{\r\n        try {\r\n            const res = await fetch(`/api/v1/contacts/${id}`, {\r\n                method: \"DELETE\"\r\n            })\r\n            const resData = await res.json();\r\n            if(resData.status===\"success\"){\r\n                const index = this.state.contacts.findIndex(el=>el._id===id);\r\n                console.log(index);\r\n                let contacts = [...this.state.contacts];\r\n                contacts.splice(index,1);\r\n                console.log(contacts);\r\n                console.log(contacts);\r\n                this.setState({\r\n                    alertType: \"success\",\r\n                    showAlert: true,\r\n                    alertMsg: \"Contact Added Successfully...\",\r\n                    contacts: contacts,\r\n                    filteredContacts: contacts\r\n                })\r\n                setTimeout(()=>{\r\n                    this.setState({\r\n                        showAlert: false\r\n                    })\r\n                    this.props.history.push(\"/contacts\");\r\n                },3000)\r\n                console.log(resData)\r\n            }\r\n            else{\r\n                this.setState({\r\n                    alertType: \"danger\",\r\n                    showAlert: true,\r\n                    alertMsg: resData.message\r\n                })\r\n                setTimeout(()=>{\r\n                    this.setState({\r\n                        showAlert: false\r\n                    })\r\n                },3000)\r\n            }\r\n        } catch (error) {\r\n            this.setState({\r\n                alertType: \"danger\",\r\n                showAlert: true,\r\n                alertMsg: \"something went wrong\"\r\n            })\r\n            setTimeout(()=>{\r\n                this.setState({\r\n                    showAlert: false\r\n                })\r\n            },3000)\r\n        }\r\n    }\r\n\r\n    editButtonHandler = (id)=>{\r\n        this.props.history.push(`/edit-contact/${id}`);\r\n    }\r\n\r\n    searchBynameHandler = (e)=>{\r\n        let filteredContacts = this.state.contacts.filter((el)=>{\r\n            const index = el.name.toLowerCase().indexOf(e.target.value.toLowerCase());\r\n            if(index!==-1)\r\n                return true;\r\n            else\r\n                return false;\r\n        })\r\n        this.setState({\r\n            filteredContacts: filteredContacts\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        let content = <Loader />\r\n        if(!this.state.loading)\r\n            content=(\r\n                <React.Fragment>\r\n                    <h1 style={{textAlign: \"center\"}}>MY ADDRESS BOOK</h1>\r\n                    <div style={{textAlign: \"right\"}}>\r\n                        <input type=\"text\" placeholder=\"Search by name\" onChange={this.searchBynameHandler}/>\r\n                    </div>\r\n                    {this.state.filteredContacts.length === 0? <h1 style={{textAlign: \"center\"}}>You have no contacts!!!</h1>: null}\r\n                    {this.state.filteredContacts.map(el=>{\r\n                        return <Contact key={el._id} name={el.name} number={el.number} id={el._id} editButtonHandler={this.editButtonHandler} deleteButtonHandler={this.deleteButtonHandler}/>\r\n                    })}\r\n                    \r\n                </React.Fragment>\r\n            )\r\n        let alert = null;\r\n        if(this.state.showAlert){\r\n            alert = <Alert type={this.state.alertType} value={this.state.alertMsg} />\r\n        }\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                {content}\r\n                {alert}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contacts;","import * as actionTypes from \"./actionTypes\";\r\n\r\nconst loginSuccess = (user)=>{\r\n    return {\r\n        type: actionTypes.LOGIN_SUCCESS,\r\n        user: user\r\n    }\r\n}\r\n\r\nconst loginFailed = ()=>{\r\n    return {\r\n        type: actionTypes.LOGIN_FAILED\r\n    }\r\n}\r\n\r\nconst authStart = ()=>{\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    }\r\n}\r\n\r\nexport const checkUserSession = ()=>{\r\n    return async dispatch=>{\r\n        try {\r\n            dispatch(authStart());\r\n            const res = await fetch(\"/api/v1/users/me\");\r\n            const resData = await res.json();\r\n            if(resData.status === \"success\")\r\n                dispatch(loginSuccess(resData.data));\r\n            else\r\n                dispatch(loginFailed());\r\n        } catch (error) {\r\n            console.log(error);\r\n            dispatch(loginFailed());\r\n        }\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport Alert from \"../../components/Alert/Alert\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport classes from \"./EditContact.module.css\"\r\n\r\nclass EditContact extends Component{\r\n\r\n    state={\r\n        formData: {\r\n            name: null,\r\n            number: null\r\n        },\r\n        invalidId: false,\r\n        loading: true,\r\n        showAlert: false,\r\n        alertType: \"success\",\r\n        alertMsg: \"\"\r\n    }\r\n\r\n    async componentDidMount(){\r\n        // console.log(this.props);\r\n        try {\r\n            const res= await fetch(`/api/v1/contacts/${this.props.match.params.id}`);\r\n            const resData = await res.json();\r\n            console.log(resData);\r\n            if(resData.status ===\"success\")\r\n                this.setState({\r\n                    formData: {\r\n                        name: resData.data.name,\r\n                        number: resData.data.number\r\n                    },\r\n                    loading: false\r\n                })\r\n            else{\r\n                this.setState({\r\n                    invalidId: true\r\n                })\r\n            }    \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    inputChangeHandler= (key,event)=>{\r\n        this.setState({\r\n            formData: {\r\n                ...this.state.formData,\r\n                [key]: event.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    editContactHandler = async (e)=>{\r\n        e.preventDefault();\r\n        try {\r\n            console.log(this.state.formData);\r\n            const res = await fetch(`/api/v1/contacts/${this.props.match.params.id}`, {\r\n                method: \"PATCH\",\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n                body: JSON.stringify(this.state.formData)\r\n            });\r\n            const resData = await res.json();\r\n            if(resData.status===\"success\"){\r\n                this.setState({\r\n                    alertType: \"success\",\r\n                    showAlert: true,\r\n                    alertMsg: \"Contact Edited Successfully...\"\r\n                })\r\n                setTimeout(()=>{\r\n                    this.setState({\r\n                        showAlert: false\r\n                    })\r\n                    this.props.history.push(\"/contacts\");\r\n                },3000)\r\n                console.log(resData)\r\n            }\r\n            else{\r\n                this.setState({\r\n                    alertType: \"danger\",\r\n                    showAlert: true,\r\n                    alertMsg: resData.message\r\n                })\r\n                setTimeout(()=>{\r\n                    this.setState({\r\n                        showAlert: false\r\n                    })\r\n                },3000)\r\n            }\r\n            \r\n        } catch (error) {\r\n            this.setState({\r\n                alertType: \"danger\",\r\n                showAlert: true,\r\n                alertMsg: \"something went wrong\"\r\n            })\r\n            setTimeout(()=>{\r\n                this.setState({\r\n                    showAlert: false\r\n                })\r\n            },3000)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let editDOM;\r\n        if(this.state.loading){\r\n            editDOM = <Loader />;\r\n        }\r\n        else{\r\n            editDOM = (\r\n                <React.Fragment>\r\n                    <h1 style={{textAlign: \"center\"}}>EDIT CONTACT</h1>\r\n                    <form className=\"form-group\" style={{maxWidth: \"500px\", margin: \"auto\"}} onSubmit={this.editContactHandler}>\r\n                        <input type=\"text\" placeholder=\"Name\" className=\"form-control\" value={this.state.formData.name} onChange={this.inputChangeHandler.bind(this, \"name\")} required/>\r\n                        <br/>\r\n                        <input type=\"text\" placeholder=\"Number\" className=\"form-control\" value={this.state.formData.number} onChange={this.inputChangeHandler.bind(this, \"number\")} required minLength=\"10\" maxLength=\"10\"/>\r\n                        <br/>\r\n                        <div className={classes.address_buttons}>\r\n                            <span></span>\r\n                            <div>\r\n                                <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                                <button className=\"btn btn-danger\" type=\"button\" style={{marginLeft: \"15px\"}} onClick={()=>{this.props.history.push(\"/contacts\")}}>Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n\r\n        if(this.state.invalidId){\r\n            editDOM= <h1>Invalid Id</h1>\r\n        }\r\n\r\n        let alert = null;\r\n        if(this.state.showAlert){\r\n            alert = <Alert type={this.state.alertType} value={this.state.alertMsg} />\r\n        }\r\n\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                {alert}\r\n                {editDOM}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React, { Component } from \"react\";\r\nimport Alert from \"../../components/Alert/Alert\";\r\nimport classes from \"./EditContact.module.css\"\r\n\r\n\r\nclass AddContact extends Component{\r\n    state={\r\n        formData: {\r\n            name: \"\",\r\n            number: \"\"\r\n        },\r\n        showAlert: false,\r\n        alertType: \"success\",\r\n        alertMsg: \"\"\r\n    }\r\n\r\n    inputChangeHandler= (key,event)=>{\r\n        this.setState({\r\n            formData: {\r\n                ...this.state.formData,\r\n                [key]: event.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    addContactHandler= async (e)=>{\r\n        e.preventDefault();\r\n        try {\r\n            console.log(this.state.formData);\r\n            const res = await fetch(`/api/v1/contacts`, {\r\n                method: \"POST\",\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n                body: JSON.stringify(this.state.formData)\r\n            });\r\n            const resData = await res.json();\r\n            if(resData.status===\"success\"){\r\n                this.setState({\r\n                    alertType: \"success\",\r\n                    showAlert: true,\r\n                    alertMsg: \"Contact Added Successfully...\"\r\n                })\r\n                setTimeout(()=>{\r\n                    this.setState({\r\n                        showAlert: false\r\n                    })\r\n                    this.props.history.push(\"/contacts\");\r\n                },3000)\r\n                console.log(resData)\r\n            }\r\n            else{\r\n                this.setState({\r\n                    alertType: \"danger\",\r\n                    showAlert: true,\r\n                    alertMsg: resData.message\r\n                })\r\n                setTimeout(()=>{\r\n                    this.setState({\r\n                        showAlert: false\r\n                    })\r\n                },3000)\r\n            }\r\n            \r\n        } catch (error) {\r\n            this.setState({\r\n                alertType: \"danger\",\r\n                showAlert: true,\r\n                alertMsg: \"something went wrong\"\r\n            })\r\n            setTimeout(()=>{\r\n                this.setState({\r\n                    showAlert: false\r\n                })\r\n            },3000)\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        let alert = null;\r\n        if(this.state.showAlert){\r\n            alert = <Alert type={this.state.alertType} value={this.state.alertMsg} />\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container-fluid\">\r\n                    {alert}\r\n                    <h1 style={{textAlign: \"center\"}}>ADD NEW CONTACT</h1>\r\n                    <form className=\"form-group\" style={{maxWidth: \"500px\", margin: \"auto\"}} onSubmit={this.addContactHandler}>\r\n                        <input type=\"text\" placeholder=\"Name\" className=\"form-control\" value={this.state.formData.name} onChange={this.inputChangeHandler.bind(this, \"name\")} required/>\r\n                        <br/>\r\n                        <input type=\"text\" placeholder=\"Number\" className=\"form-control\" value={this.state.formData.number} onChange={this.inputChangeHandler.bind(this, \"number\")} required minLength=\"10\" maxLength=\"10\"/>\r\n                        <br/>\r\n                        <div className={classes.address_buttons}>\r\n                            <span></span>\r\n                            <div>\r\n                                <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                                <button className=\"btn btn-danger\" type=\"button\" style={{marginLeft: \"15px\"}} onClick={()=>{this.props.history.push(\"/contacts\")}}>Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default AddContact;","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Layout from './containers/Layout/Layout';\nimport {BrowserRouter, Redirect, Route, Switch} from \"react-router-dom\";\nimport Login from './containers/Auth/Login';\nimport Homepage from './containers/Homepage/Homepage';\nimport Signup from './containers/Auth/Signup';\nimport Contacts from './containers/AddresBook/Contacts';\nimport React, { Component } from \"react\";\nimport {connect} from \"react-redux\"\nimport * as authActions from \"./store/actions/auth\"\nimport Loader from './components/Loader/Loader';\nimport EditContact from './containers/AddresBook/EditContact';\nimport AddContact from './containers/AddresBook/AddContact';\n\nclass App extends Component {\n\n  state={\n    appLoading: true\n  }\n\n  componentDidMount(){\n    this.props.checkUserSession();\n    this.setState({\n      appLoading: false\n    })\n  }\n\n  render(){\n\n    let routes;\n\n    if(this.props.user){\n      routes = (\n        <Switch>\n          <Route path=\"/edit-contact/:id\" component={EditContact} />\n          <Route path=\"/add-contact\" component={AddContact} />\n          <Route path=\"/contacts\" exact component={Contacts}></Route>\n          <Redirect from=\"/\" to=\"/contacts\" />\n        </Switch>\n      )\n    }\n    else{\n      routes = (\n        <Switch>\n          <Route path=\"/login\" exact component={Login}></Route>\n          <Route path=\"/signup\" exact component={Signup}></Route>\n          <Route path= \"/\" exact component={Homepage}></Route>\n          <Redirect from=\"/\" to=\"/\" />\n        </Switch>\n      )\n    }\n\n    if(this.props.loading)\n      routes = <Loader />\n\n    return (\n      <BrowserRouter>\n        <Layout user={this.props.user}>\n          {this.state.appLoading?null: routes}\n        </Layout>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = state=>{\n  return{\n    user: state.authReducer.user,\n    error: state.authReducer.error,\n    loading: state.authReducer.loading\n  }\n}\n\nconst mapDispatchToProps = dispatch=>{\n  return{\n    checkUserSession: ()=>dispatch(authActions.checkUserSession())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import * as actionTypes from \"./../actions/actionTypes\"\r\nconst initialState = {\r\n    user: null,\r\n    loading: false,\r\n    error: false\r\n}\r\n\r\nconst reducer = (state=initialState, action)=>{\r\n    switch(action.type){\r\n        case actionTypes.LOGIN_SUCCESS: \r\n            return {\r\n                user: action.user,\r\n                error: false,\r\n                loading: false\r\n            }\r\n        case actionTypes.LOGIN_FAILED:\r\n            return {\r\n                user: null,\r\n                error: true,\r\n                loading: false\r\n            }\r\n        case actionTypes.AUTH_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {compose, combineReducers, createStore, applyMiddleware} from \"redux\"\nimport {Provider} from \"react-redux\";\nimport reduxThunk from \"redux-thunk\";\nimport authReducer from \"./store/reducers/auth\"\n// import reportWebVitals from './reportWebVitals';\n\nconst composeEnhancers = process.env.NODE_ENV===\"development\"?window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n  authReducer\n})\n\nconst store= createStore(rootReducer, composeEnhancers(applyMiddleware(reduxThunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}